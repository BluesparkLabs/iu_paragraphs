{#
/**
 * @file
 * IU Paragraphs template for displaying a Banner.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% set type = paragraph.iu_banner_type.value %}
{% set has_title = paragraph.iu_banner_header.value is not empty  %}
{% set has_teaser = paragraph.iu_banner_subhead.value is not empty  %}
{% set has_button = paragraph.iu_banner_link.value is not empty %}
{% set has_position = paragraph.iu_banner_content_position.value is not empty %}
{% set has_content = has_title or has_teaser or has_button %}
{% set has_image = paragraph.iu_banner_image.value is not empty  %}
{% set has_mp4 = paragraph.iu_banner_mp4.value is not empty  %}
{% set has_webm = paragraph.iu_banner_webm.value is not empty %}
{% set has_video = has_mp4 or has_webm and type == 'video' %}
{% if type == 'image' and not has_image %}
{% set type = FALSE %}
{% elseif type == 'text' and not has_content %}
{% set type = FALSE %}
{% elseif type == 'text_overlay' and not has_content %}
{% set type = has_image ? 'image' : FALSE %}
{% elseif type == 'text_overlay' and not has_image %}
{% set type = 'text' %}
{% elseif type == 'text_image_50_50' and not has_content %}
{% set type = has_image ? 'image' : FALSE %}
{% elseif type == 'text_image_50_50' and not has_image %}
{% set type = 'text' %}
{% elseif type == 'video' and not has_video %}
{% set type = has_image ? 'image' : FALSE %}
{% endif %}

{% if type %}
{% if has_position %}
{% set content_position = 'content-' ~ paragraph.iu_banner_content_position.value %}
{% endif %}
{%
  set section_classes = [
    type == 'text' ? 'text ' ~ content_position,
    type == 'image' ? 'image',
    type == 'video' ? 'bg-video',
    type == 'text_overlay' ? 'bg-image text-overlay ' ~ content_position,
    type == 'text_image_50_50' ? 'text-image ' ~ content_position,
    type == 'text' or type == 'text_image_50_50' ? bgcolor,
  ]
%}
{%
  set content_classes = [
    type == 'text' ? 'banner--content text--content',
    type == 'text_overlay' ? 'banner--content text-overlay--content',
    type == 'text_image_50_50' ? 'banner--content text-image--content',
  ]
%}
{# handle field_layout if enabled #}
{% if content._field_layout.content %}
{% set content = content._field_layout.content %}
{% endif %}

<div id="banner" role="region" aria-label="feature" class="section banner {{ section_classes|join(' ') }}">
  {% if type != 'text' and has_image %}
    <div class="show-for-small-only" data-ratio="3x2">
      <div class="bg-image-cover" style="background-image: url('{{ bgimage_small }}');"></div>
    </div>
    <div class="show-for-medium-only" data-ratio="2x1">
      <div class="bg-image-cover" style="background-image: url('{{ bgimage_medium }}');"></div>
    </div>
    <div class="show-for-large" data-ratio="3x1">
      <div class="bg-image-cover" style="background-image: url('{{ bgimage_large }}');"></div>
    </div>
  {% endif %}
  {% if has_video %}
  <div class="visually-hidden">
    {{ content.iu_banner_transcript }}
  </div>
  <div class="bg-video-viewport"
    data-height="600"
    data-width="1800"
    {% if has_mp4 %}data-mp4="{{ paragraph.iu_banner_mp4.value }}"{% endif %}
    {% if has_webm %}data-webm="{{ paragraph.iu_banner_webm.value }}"{% endif %}
  ></div>
  {% endif %}
  {% if content_classes|length %}
  <div class="row pad">
    <div class="{{ content_classes|join(' ') }}">
      {{ content.iu_banner_header }}
      {{ content.iu_banner_subhead }}
      {{ content.iu_banner_link }}
    </div>
  </div>
  {% endif %}
</div>

{% endif %}
